{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\portfolio\\\\sto-webs\\\\client\\\\src\\\\components\\\\Comments\\\\ReplyForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReplyForm = _ref => {\n  _s();\n  let {\n    commentId,\n    setComments\n  } = _ref;\n  const [author, setAuthor] = useState('');\n  const [content, setContent] = useState('');\n  const [replyMessage, setReplyMessage] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(`http://localhost:5000/comments/${commentId}/replies`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        author,\n        content\n      })\n    }).then(response => response.json()).then(data => {\n      // Обработка ответа\n      setReplyMessage(data.message);\n      // Обновление списка комментариев\n      setComments(data.comment.replies);\n      // Сброс полей формы\n      setAuthor('');\n      setContent('');\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [replyMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: replyMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"\\u0410\\u0432\\u0442\\u043E\\u0440:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        value: author,\n        onChange: event => setAuthor(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content\",\n        children: \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"content\",\n        value: content,\n        onChange: event => setContent(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), \"    \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ReplyForm, \"GtYSpOsDMZYhM7uvBKots1v40iM=\");\n_c = ReplyForm;\nexport default ReplyForm;\nvar _c;\n$RefreshReg$(_c, \"ReplyForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReplyForm","_ref","_s","commentId","setComments","author","setAuthor","content","setContent","replyMessage","setReplyMessage","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","message","comment","replies","catch","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Pavel/Desktop/portfolio/sto-webs/client/src/components/Comments/ReplyForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ReplyForm = ({ commentId, setComments }) => {\r\n  const [author, setAuthor] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [replyMessage, setReplyMessage] = useState('');\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch(`http://localhost:5000/comments/${commentId}/replies`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ author, content }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Обработка ответа\r\n        setReplyMessage(data.message);\r\n        // Обновление списка комментариев\r\n        setComments(data.comment.replies);\r\n        // Сброс полей формы\r\n        setAuthor('');\r\n        setContent('');\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n              {replyMessage && <p>{replyMessage}</p>}\r\n\r\n <div>\r\n        <label htmlFor=\"author\">Автор:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"author\"\r\n          value={author}\r\n          onChange={(event) => setAuthor(event.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"content\">Содержание:</label>\r\n        <textarea\r\n          id=\"content\"\r\n          value={content}\r\n          onChange={(event) => setContent(event.target.value)}\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\">Отправить ответ</button>    </form>\r\n  );\r\n};\r\n\r\nexport default ReplyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}