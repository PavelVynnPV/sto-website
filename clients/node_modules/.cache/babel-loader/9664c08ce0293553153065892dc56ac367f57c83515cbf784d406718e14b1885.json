{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\portfolio\\\\sto-webs\\\\clients\\\\src\\\\components\\\\Comments\\\\ReplyForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"../styles/Comment.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReplyForm = _ref => {\n  _s();\n  let {\n    commentId,\n    setComments\n  } = _ref;\n  const [author, setAuthor] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n  useEffect(() => {\n    const date = new Date();\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    const formattedDate = `${day}.${month}.${year}`;\n    setDay(formattedDate);\n  }, []);\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n  useEffect(() => {\n    const verifyEmail = () => {\n      // Regular expression pattern for email validation\n      const pattern = /^[\\w\\.-]+@[\\w\\.-]+\\.\\w+$/;\n\n      // Use the pattern to match the email address\n      if (pattern.test(email)) {\n        setIsValid(true);\n      } else {\n        setIsValid(false);\n      }\n    };\n    verifyEmail();\n  }, [email]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(`https://sto-web-pv.onrender.com/comments/${commentId}/replies`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        author,\n        content,\n        day,\n        email\n      })\n    }).then(response => response.json()).then(data => {\n      // Обновление списка комментариев\n      setComments(data.comment.replies);\n      // Сброс полей формы\n      setAuthor(\"\");\n      setContent(\"\");\n      setEmail(\"\");\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: styles.reply__form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form__inputs,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"\\u0406\\u043C'\\u044F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        value: author,\n        onChange: event => setAuthor(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form__inputs,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        value: email,\n        onChange: event => {\n          setEmail(event.target.value);\n          handleEmailChange(event);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), !isValid ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: email.length > 1 ? styles.red_error : styles.unActive,\n        children: \"Email \\u0432\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0432\\u0456\\u0440\\u043D\\u043E*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form__inputs,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content\",\n        children: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"content\",\n        value: content,\n        onChange: event => setContent(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.form__button,\n      type: \"submit\",\n      disabled: !isValid,\n      children: \"\\u0412\\u0456\\u0434\\u043F\\u043E\\u0432\\u0456\\u0441\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ReplyForm, \"wnl3o5yCzLBkpJN4gH+1os17yLg=\");\n_c = ReplyForm;\nexport default ReplyForm;\nvar _c;\n$RefreshReg$(_c, \"ReplyForm\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","ReplyForm","_ref","_s","commentId","setComments","author","setAuthor","content","setContent","day","setDay","email","setEmail","isValid","setIsValid","date","Date","getDate","month","getMonth","year","getFullYear","formattedDate","handleEmailChange","event","target","value","verifyEmail","pattern","test","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","comment","replies","catch","error","console","onSubmit","className","reply__form","children","form__inputs","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","length","red_error","unActive","form__button","disabled","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/portfolio/sto-webs/clients/src/components/Comments/ReplyForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"../styles/Comment.module.css\";\n\nconst ReplyForm = ({ commentId, setComments }) => {\n  const [author, setAuthor] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n\n  useEffect(() => {\n    const date = new Date();\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    const formattedDate = `${day}.${month}.${year}`;\n\n    setDay(formattedDate);\n  }, []);\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  useEffect(() => {\n    const verifyEmail = () => {\n      // Regular expression pattern for email validation\n      const pattern = /^[\\w\\.-]+@[\\w\\.-]+\\.\\w+$/;\n  \n      // Use the pattern to match the email address\n      if (pattern.test(email)) {\n        setIsValid(true);\n      } else {\n        setIsValid(false);\n      }\n    };\n  \n    verifyEmail();\n  }, [email])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(`https://sto-web-pv.onrender.com/comments/${commentId}/replies`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ author, content, day, email }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Обновление списка комментариев\n        setComments(data.comment.replies);\n        // Сброс полей формы\n        setAuthor(\"\");\n        setContent(\"\");\n        setEmail(\"\");\n      })\n      .catch((error) => console.error(error));\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.reply__form}>\n      <div className={styles.form__inputs}>\n        <label htmlFor=\"author\">Ім'я:</label>\n        <input\n          type=\"text\"\n          id=\"author\"\n          value={author}\n          onChange={(event) => setAuthor(event.target.value)}\n          required\n        />\n      </div>\n      <div className={styles.form__inputs}>\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          value={email}\n          onChange={(event) => {\n            setEmail(event.target.value);\n            handleEmailChange(event);\n          }}\n          required\n        />\n        {!isValid ? (\n          <p className={email.length > 1 ? styles.red_error : styles.unActive}>\n            Email введений невірно*\n          </p>\n        ) : null}\n      </div>\n      <div className={styles.form__inputs}>\n        <label htmlFor=\"content\">Коментар:</label>\n        <textarea\n          id=\"content\"\n          value={content}\n          onChange={(event) => setContent(event.target.value)}\n          required\n        ></textarea>\n      </div>\n      <button className={styles.form__button} type=\"submit\" disabled={!isValid}>\n        Відповісти\n      </button>{\" \"}\n    </form>\n  );\n};\n\nexport default ReplyForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}