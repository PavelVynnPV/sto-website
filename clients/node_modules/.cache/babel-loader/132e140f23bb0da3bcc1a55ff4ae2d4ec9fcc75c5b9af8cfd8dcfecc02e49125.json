{"ast":null,"code":"import _toConsumableArray from\"C:/Users/user/Desktop/portfolio/sto-webs/clients/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{useMemo}from'react';export var DOTS='...';var range=function range(start,end){var length=end-start+1;return Array.from({length:length},function(_,idx){return idx+start;});};export var usePagination=function usePagination(_ref){var totalCount=_ref.totalCount,pageSize=_ref.pageSize,_ref$siblingCount=_ref.siblingCount,siblingCount=_ref$siblingCount===void 0?1:_ref$siblingCount,currentPage=_ref.currentPage;var paginationRange=useMemo(function(){var totalPageCount=Math.ceil(totalCount/pageSize);// Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\nvar totalPageNumbers=siblingCount+5;/*\n      If the number of pages is less than the page numbers we want to show in our\n      paginationComponent, we return the range [1..totalPageCount]\n    */if(totalPageNumbers>=totalPageCount){return range(1,totalPageCount);}var leftSiblingIndex=Math.max(currentPage-siblingCount,1);var rightSiblingIndex=Math.min(currentPage+siblingCount,totalPageCount);/*\n      We do not want to show dots if there is only one position left \n      after/before the left/right page count as that would lead to a change if our Pagination\n      component size which we do not want\n    */var shouldShowLeftDots=leftSiblingIndex>2;var shouldShowRightDots=rightSiblingIndex<totalPageCount-2;var firstPageIndex=1;var lastPageIndex=totalPageCount;if(!shouldShowLeftDots&&shouldShowRightDots){var leftItemCount=3+2*siblingCount;var leftRange=range(1,leftItemCount);return[].concat(_toConsumableArray(leftRange),[DOTS,totalPageCount]);}if(shouldShowLeftDots&&!shouldShowRightDots){var rightItemCount=3+2*siblingCount;var rightRange=range(totalPageCount-rightItemCount+1,totalPageCount);return[firstPageIndex,DOTS].concat(_toConsumableArray(rightRange));}if(shouldShowLeftDots&&shouldShowRightDots){var middleRange=range(leftSiblingIndex,rightSiblingIndex);return[firstPageIndex,DOTS].concat(_toConsumableArray(middleRange),[DOTS,lastPageIndex]);}},[totalCount,pageSize,siblingCount,currentPage]);return paginationRange;};","map":{"version":3,"names":["useMemo","DOTS","range","start","end","length","Array","from","_","idx","usePagination","_ref","totalCount","pageSize","_ref$siblingCount","siblingCount","currentPage","paginationRange","totalPageCount","Math","ceil","totalPageNumbers","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftItemCount","leftRange","concat","_toConsumableArray","rightItemCount","rightRange","middleRange"],"sources":["C:/Users/user/Desktop/portfolio/sto-webs/clients/src/components/Pagination/UsePagination.js"],"sourcesContent":["import { useMemo } from 'react';\n\nexport const DOTS = '...';\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount = 1,\n  currentPage\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount + 5;\n\n    /*\n      If the number of pages is less than the page numbers we want to show in our\n      paginationComponent, we return the range [1..totalPageCount]\n    */\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    /*\n      We do not want to show dots if there is only one position left \n      after/before the left/right page count as that would lead to a change if our Pagination\n      component size which we do not want\n    */\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n"],"mappings":"8IAAA,OAASA,OAAO,KAAQ,OAAO,CAE/B,MAAO,IAAM,CAAAC,IAAI,CAAG,KAAK,CAEzB,GAAM,CAAAC,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAIC,KAAK,CAAEC,GAAG,CAAK,CAC5B,GAAI,CAAAC,MAAM,CAAGD,GAAG,CAAGD,KAAK,CAAG,CAAC,CAC5B,MAAO,CAAAG,KAAK,CAACC,IAAI,CAAC,CAAEF,MAAM,CAANA,MAAO,CAAC,CAAE,SAACG,CAAC,CAAEC,GAAG,QAAK,CAAAA,GAAG,CAAGN,KAAK,GAAC,CACxD,CAAC,CAED,MAAO,IAAM,CAAAO,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAAC,IAAA,CAKpB,IAJJ,CAAAC,UAAU,CAAAD,IAAA,CAAVC,UAAU,CACVC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CAAAC,iBAAA,CAAAH,IAAA,CACRI,YAAY,CAAZA,YAAY,CAAAD,iBAAA,UAAG,CAAC,CAAAA,iBAAA,CAChBE,WAAW,CAAAL,IAAA,CAAXK,WAAW,CAEX,GAAM,CAAAC,eAAe,CAAGjB,OAAO,CAAC,UAAM,CACpC,GAAM,CAAAkB,cAAc,CAAGC,IAAI,CAACC,IAAI,CAACR,UAAU,CAAGC,QAAQ,CAAC,CAEvD;AACA,GAAM,CAAAQ,gBAAgB,CAAGN,YAAY,CAAG,CAAC,CAEzC;AACJ;AACA;AACA,MACI,GAAIM,gBAAgB,EAAIH,cAAc,CAAE,CACtC,MAAO,CAAAhB,KAAK,CAAC,CAAC,CAAEgB,cAAc,CAAC,CACjC,CAEA,GAAM,CAAAI,gBAAgB,CAAGH,IAAI,CAACI,GAAG,CAACP,WAAW,CAAGD,YAAY,CAAE,CAAC,CAAC,CAChE,GAAM,CAAAS,iBAAiB,CAAGL,IAAI,CAACM,GAAG,CAChCT,WAAW,CAAGD,YAAY,CAC1BG,cACF,CAAC,CAED;AACJ;AACA;AACA;AACA,MACI,GAAM,CAAAQ,kBAAkB,CAAGJ,gBAAgB,CAAG,CAAC,CAC/C,GAAM,CAAAK,mBAAmB,CAAGH,iBAAiB,CAAGN,cAAc,CAAG,CAAC,CAElE,GAAM,CAAAU,cAAc,CAAG,CAAC,CACxB,GAAM,CAAAC,aAAa,CAAGX,cAAc,CAEpC,GAAI,CAACQ,kBAAkB,EAAIC,mBAAmB,CAAE,CAC9C,GAAI,CAAAG,aAAa,CAAG,CAAC,CAAG,CAAC,CAAGf,YAAY,CACxC,GAAI,CAAAgB,SAAS,CAAG7B,KAAK,CAAC,CAAC,CAAE4B,aAAa,CAAC,CAEvC,SAAAE,MAAA,CAAAC,kBAAA,CAAWF,SAAS,GAAE9B,IAAI,CAAEiB,cAAc,GAC5C,CAEA,GAAIQ,kBAAkB,EAAI,CAACC,mBAAmB,CAAE,CAC9C,GAAI,CAAAO,cAAc,CAAG,CAAC,CAAG,CAAC,CAAGnB,YAAY,CACzC,GAAI,CAAAoB,UAAU,CAAGjC,KAAK,CACpBgB,cAAc,CAAGgB,cAAc,CAAG,CAAC,CACnChB,cACF,CAAC,CACD,OAAQU,cAAc,CAAE3B,IAAI,EAAA+B,MAAA,CAAAC,kBAAA,CAAKE,UAAU,GAC7C,CAEA,GAAIT,kBAAkB,EAAIC,mBAAmB,CAAE,CAC7C,GAAI,CAAAS,WAAW,CAAGlC,KAAK,CAACoB,gBAAgB,CAAEE,iBAAiB,CAAC,CAC5D,OAAQI,cAAc,CAAE3B,IAAI,EAAA+B,MAAA,CAAAC,kBAAA,CAAKG,WAAW,GAAEnC,IAAI,CAAE4B,aAAa,GACnE,CACF,CAAC,CAAE,CAACjB,UAAU,CAAEC,QAAQ,CAAEE,YAAY,CAAEC,WAAW,CAAC,CAAC,CAErD,MAAO,CAAAC,eAAe,CACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}